{"version":3,"file":"static/js/97.2641f00b.chunk.js","mappings":"4QAEaA,EAAYC,EAAAA,GAAAA,GAAD,4PAQXC,EAAQD,EAAAA,GAAAA,GAAH,iFAKLE,EAAOF,EAAAA,GAAAA,EAAH,yC,SCZF,SAASG,EAAT,GAAgD,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC/C,OAAO,UAACN,EAAD,YACH,UAACE,EAAD,sBAAgBG,MAChB,UAACF,EAAD,qBAAcG,QCDP,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,IAAaH,GAFxC,cAEUI,EAFV,gBAGUL,EAAWK,EAASC,SAH9B,iHADc,uBAAC,WAAD,wBAQdC,KACC,CAACN,KAEF,8BACsB,IAAnBF,EAAQS,QACP,oEAEA,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIf,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,SAACF,EAAD,CAA2BC,OAAQA,EAAQC,QAASA,GAA7Bc,Y,mLC1B/BC,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACOC,EADP,UACgBF,EADhB,uCACuDD,EADvD,wBACkF,GADlF,SAEwBJ,MAAMO,GAF9B,cAEOT,EAFP,OAGOU,EAAOV,EAASW,OAHvB,kBAIQD,GAJR,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhB,GAA9B,kFACQa,EADR,UACiBF,EADjB,kBACmCX,EADnC,oBACsDU,EADtD,4BAEyBJ,MAAMO,GAF/B,cAEQT,EAFR,gBAGqBA,EAASW,OAH9B,cAGQD,EAHR,yBAISA,GAJT,kEAOE,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCL,EADD,UACUF,EADV,iCAC2CD,EAD3C,iCACuEQ,EADvE,SAC2F,EAD3F,iCAEkBZ,MAAMO,GAFxB,cAECT,EAFD,OAGCU,EAAOV,EAASW,OAHjB,kBAIED,GAJF,kEAME,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBnB,GAAzB,kFACCa,EADD,UACUF,EADV,kBAC4BX,EAD5B,4BACuDU,EADvD,4BAEkBJ,MAAMO,GAFxB,cAECT,EAFD,OAGCU,EAAOV,EAASW,OAHjB,kBAIED,GAJF,kEAMA,SAAeX,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACCa,EADD,UACUF,EADV,kBAC4BX,EAD5B,4BACuDU,EADvD,4BAEkBJ,MAAMO,GAFxB,cAECT,EAFD,OAGCU,EAAOV,EAASW,OAHjB,kBAIED,GAJF","sources":["components/MovieReviews/MovieReviewsItem.styled.jsx","components/MovieReviews/MovieReviewsItem.jsx","components/MovieReviews/MovieReviews.jsx","service/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsItem=styled.li`\n    width:100%;\n    padding:15px;\n    border-radius:4px;\n    background-color: #f1f1f1;\n      box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\nexport const Title = styled.h3`\nfont-size:14px;\nfont-weight:bold;\nmargin-bottom:10px;\n`\nexport const Text = styled.p`\nfont-size:12px;\n`\n","import PropTypes from 'prop-types'\nimport { ReviewsItem, Title, Text } from './MovieReviewsItem.styled';\n\nexport default function MovieReviewsItem({ author, content }) {\n    return <ReviewsItem>\n        <Title>author: {author}</Title>\n        <Text>review:{content}</Text>\n    </ReviewsItem>\n}\n\nMovieReviewsItem.propTypes = {\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n}","import { fetchReviews } from 'service/fetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieReviewsItem from './MovieReviewsItem';\n\nexport default function MovieReviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const response = await fetchReviews(movieId);\n        await setReviews(response.results);\n      } catch (error) {}\n    }\n\n    fetch();\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>we dont have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <MovieReviewsItem key={id} author={author} content={content} />\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","const KEY = 'b6201d5209ec246f483ea16253167a90';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTranding() {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n        const response = await fetch(url);\n        const data = response.json();\n        return data;\n}\nexport async function fetchMovieById(movieId) {\n         const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n         const response = await fetch(url);\n         const data = await response.json();\n         return data;\n}\n\n  export async function fetchSearchMovie(searchQuery) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${1}&include_adult=false`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n}\n    export async function fetchCast(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n}\n    export async function fetchReviews(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n    }\n"],"names":["ReviewsItem","styled","Title","Text","MovieReviewsItem","author","content","MovieReviews","useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","response","results","fetch","length","map","id","KEY","BASE_URL","fetchTranding","url","data","json","fetchMovieById","fetchSearchMovie","searchQuery","fetchCast"],"sourceRoot":""}