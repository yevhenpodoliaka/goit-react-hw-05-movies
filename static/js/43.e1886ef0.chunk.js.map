{"version":3,"file":"static/js/43.e1886ef0.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","service/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\nimport{Link} from 'react-router-dom'\n\nexport const LinkBack = styled(Link)`\n    position:absolute;\n    color:blue;\n    text-decoration:none;\n    &:hover{\n        transform: scale(1.3);\n        font-weight:bold;\n    }\n`\nexport const Card = styled.div`\n    display:flex;\n    width:100%;\n\n`\nexport const WrapImg= styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    padding:25px;\n    background-color: #f1f1f1;\n    width:35%;\n\n`\nexport const Poster= styled.img`\n    width: 100%;\n    height:auto;\n    display:block;\n    object-fit:cover;\n\n`\nexport const WrapDescription = styled.div`\nwidth:65%;\n text-align:start;\n  padding: 0 50px;\n  background-color:grey;\n  color:white;\n\n`\nexport const Title =styled.h2`\n    margin-bottom:20px;\n`\nexport const SubTitle =styled.h3`\n    margin-bottom:5px;\n`\nexport const Text=styled.p`\n    margin-bottom:10px;\n`","import { LinkBack,Card, WrapImg, Poster, WrapDescription ,Title,SubTitle,Text} from './MovieCard.styled';\nimport  defaultPoster from '../../img/no-poster.jpg';\nimport {  useLocation } from 'react-router-dom';\n\nexport default function MovieCard({\n  poster_path,\n  title,\n  overview,\n  genres = [],\n}) {\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : `${defaultPoster}`;\n  const genersList = genres.map(element => element.name).join(', ');\n\n  const location = useLocation()\n\n  return (\n    <Card>\n    <LinkBack to={location.state?.from ??'/'}> Go back</LinkBack>\n      <WrapImg>\n        <Poster src={imageUrl} alt={title} />\n      </WrapImg>\n      <WrapDescription>\n        <Title>{title}</Title>\n        <SubTitle> About  </SubTitle>\n        <Text>{overview}</Text>\n        <SubTitle> Genres  </SubTitle>\n        <Text>{genersList}</Text>\n      </WrapDescription>\n    </Card>\n  );\n}\n","import styled from \"styled-components\";\nimport { useState, useEffect ,Suspense} from 'react';\nimport { useParams, Outlet ,NavLink} from 'react-router-dom';\nimport { fetchMovieById } from 'service/fetchApi';\nimport MovieCard from '../components/MovieCard/MovieCard';\n\n\nexport default function MovieDetalis() {\n  const [data, setData] = useState({});\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetch() {\n    try {\n      const response = await fetchMovieById(movieId)\n      await setData(response)\n    } catch (error) {\n      \n    }\n    }\n    \n    fetch()\n  }, [movieId]);\n  return (\n    <>\n      <MovieCard\n        poster_path={data.poster_path}\n        title={data.title}\n        overview={data.overview}\n        genres={data.genres}\n      />\n      <Wrap>\n        <h3>Additional Information</h3>\n        <NavLinkStyled to=\"cast\">cast</NavLinkStyled>\n        <NavLinkStyled to=\"reviews\">reviews</NavLinkStyled>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n          </Suspense>\n      </Wrap>\n    </>\n  );\n}\n\n const Wrap= styled.div`\n      background-color: #f1f1f1;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    display:flex;\n    flex-direction:column;\n`\n const NavLinkStyled= styled(NavLink)`\n  text-decoration:none;\n  color:black;\n  &.active{\n    color: blue;\n    font-weight:bold;\n  } \n`","const KEY = 'b6201d5209ec246f483ea16253167a90';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTranding() {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n        const response = await fetch(url);\n        const data = response.json();\n        return data;\n}\nexport async function fetchMovieById(movieId) {\n         const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n         const response = await fetch(url);\n         const data = await response.json();\n         return data;\n}\n\n  export async function fetchSearchMovie(searchQuery) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${1}&include_adult=false`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n}\n    export async function fetchCast(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n}\n    export async function fetchReviews(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n    }\n"],"names":["LinkBack","styled","Link","Card","WrapImg","Poster","WrapDescription","Title","SubTitle","Text","MovieCard","poster_path","title","overview","genres","imageUrl","defaultPoster","genersList","map","element","name","join","location","useLocation","to","state","from","src","alt","MovieDetalis","useState","data","setData","movieId","useParams","useEffect","fetchMovieById","response","fetch","Wrap","NavLinkStyled","Suspense","fallback","NavLink","KEY","BASE_URL","fetchTranding","url","json","fetchSearchMovie","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}