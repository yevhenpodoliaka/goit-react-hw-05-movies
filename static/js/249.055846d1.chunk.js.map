{"version":3,"file":"static/js/249.055846d1.chunk.js","mappings":"2RAEaA,EAAUC,EAAAA,GAAAA,GAAF,gFAKRC,EAAMD,EAAAA,GAAAA,GAAF,gDAKJE,EAAUF,EAAAA,GAAAA,IAAH,yCAILG,EAAYH,EAAAA,GAAAA,GAAH,0CAIXI,EAAWJ,EAAAA,GAAAA,EAAH,+C,SClBN,SAASK,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,aAC5CC,EAAWD,EAAY,0CACUA,GADV,UAEtBE,GACP,OACE,UAACT,EAAD,YACE,SAACC,EAAD,CAASS,IAAKF,EAAUG,IAAKL,KAC7B,UAACJ,EAAD,mBAAiBI,MACjB,UAACH,EAAD,yBAAsBE,QCJb,SAASO,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAXAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BC,EAAAA,EAAAA,GAAUH,GAFrC,cAEUI,EAFV,gBAGUL,EAAQK,EAASN,MAH3B,iHADc,uBAAC,WAAD,wBAQdO,KACC,CAACL,KAGF,8BACmB,IAAhBF,EAAKQ,QACJ,6DAEA,SAACxB,EAAD,UACGgB,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAInB,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAChC,OACE,SAACH,EAAD,CAEEC,UAAWA,EACXC,KAAMA,EACNC,aAAcA,GAHTiB,Y,mLC7BfC,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACOC,EADP,UACgBF,EADhB,uCACuDD,EADvD,wBACkF,GADlF,SAEwBJ,MAAMO,GAF9B,cAEOR,EAFP,OAGOS,EAAOT,EAASU,OAHvB,kBAIQD,GAJR,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bf,GAA9B,kFACQY,EADR,UACiBF,EADjB,kBACmCV,EADnC,oBACsDS,EADtD,4BAEyBJ,MAAMO,GAF/B,cAEQR,EAFR,gBAGqBA,EAASU,OAH9B,cAGQD,EAHR,yBAISA,GAJT,kEAOE,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,kFACCL,EADD,UACUF,EADV,iCAC2CD,EAD3C,iCACuEQ,EADvE,SAC2F,EAD3F,iCAEkBZ,MAAMO,GAFxB,cAECR,EAFD,OAGCS,EAAOT,EAASU,OAHjB,kBAIED,GAJF,kEAME,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAAyBH,GAAzB,kFACCY,EADD,UACUF,EADV,kBAC4BV,EAD5B,4BACuDS,EADvD,4BAEkBJ,MAAMO,GAFxB,cAECR,EAFD,OAGCS,EAAOT,EAASU,OAHjB,kBAIED,GAJF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BlB,GAA5B,kFACCY,EADD,UACUF,EADV,kBAC4BV,EAD5B,4BACuDS,EADvD,4BAEkBJ,MAAMO,GAFxB,cAECR,EAFD,OAGCS,EAAOT,EAASU,OAHjB,kBAIED,GAJF,oE","sources":["components/Cast/Cast.styled.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","service/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList= styled.ul`\n    display:flex;\n    flex-wrap:wrap;\n      gap:5px;\n`\nexport const Item= styled.li`\n    width:100px;\n  \n\n`\nexport const CastImg = styled.img`\n    width:100%;\n`\n\n  export const CastTitle = styled.h3`\n font-size:14px;\n`\n\nexport const CastText = styled.p`\n      font-size:14px;\n`\n   ","import defaultPoster from '../../img/no-poster.jpg';\nimport { Item, CastImg, CastTitle, CastText } from './Cast.styled';\nexport default function CastItem({ character, name, profile_path }) {\n  const imageUrl = profile_path\n    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n    : `${defaultPoster}`;\n  return (\n    <Item>\n      <CastImg src={imageUrl} alt={name} />\n      <CastTitle>name:{name}</CastTitle>\n      <CastText>character: {character}</CastText>\n    </Item>\n  );\n}\n","import { fetchCast } from 'service/fetchApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastItem from './CastItem';\nimport { CastList } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const response = await fetchCast(movieId);\n        await setCast(response.cast);\n      } catch (error) {}\n    }\n\n    fetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length === 0 ? (\n        <p>we dont have cast for this movie</p>\n      ) : (\n        <CastList>\n          {cast.map(({ id, character, name, profile_path }) => {\n            return (\n              <CastItem\n                key={id}\n                character={character}\n                name={name}\n                profile_path={profile_path}\n              />\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n}\n","const KEY = 'b6201d5209ec246f483ea16253167a90';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTranding() {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n        const response = await fetch(url);\n        const data = response.json();\n        return data;\n}\nexport async function fetchMovieById(movieId) {\n         const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n         const response = await fetch(url);\n         const data = await response.json();\n         return data;\n}\n\n  export async function fetchSearchMovie(searchQuery) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${1}&include_adult=false`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n}\n    export async function fetchCast(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n}\n    export async function fetchReviews(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n    }\n"],"names":["CastList","styled","Item","CastImg","CastTitle","CastText","CastItem","character","name","profile_path","imageUrl","defaultPoster","src","alt","Cast","useState","cast","setCast","movieId","useParams","useEffect","fetchCast","response","fetch","length","map","id","KEY","BASE_URL","fetchTranding","url","data","json","fetchMovieById","fetchSearchMovie","searchQuery","fetchReviews"],"sourceRoot":""}