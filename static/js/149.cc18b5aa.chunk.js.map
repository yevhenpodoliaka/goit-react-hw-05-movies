{"version":3,"file":"static/js/149.cc18b5aa.chunk.js","mappings":"qLAGaA,E,OAAMC,GAAAA,GAAF,wD,2BCAF,SAASC,EAAT,GAAqC,IAAdC,EAAa,EAAbA,GAAIC,EAAS,EAATA,MAChCC,GAAWC,EAAAA,EAAAA,MACnB,OACE,SAACN,EAAD,WACE,SAAC,KAAD,CAASO,GAAE,kBAAaJ,GAAMK,MAAO,CAACC,KAAKJ,GAA3C,UACE,uBAAID,QCLG,SAASM,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAC9B,OAAO,wBACFA,EAAMC,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAAmB,SAACF,EAAD,CAC1BE,MAAOA,EACPD,GAAKA,GAFuCA,U,2HCFzC,SAASU,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SAChC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OAAO,kBAAMH,SANQ,SAACI,GAClBA,EAAEC,iBACFL,EAASE,GACTC,EAAS,KAGN,WACH,kBAAOG,KAAK,OAAOC,MAAOL,EAAOM,SAVd,SAACJ,GACpBD,EAASC,EAAEK,OAAOF,WAUlB,mBAAQD,KAAK,SAAb,uB,+BCVO,SAASI,IACtB,OAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOJ,EAAP,KAAcc,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAKMZ,EAAQW,EAAaE,IAAI,SAe/B,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,8GAE2BC,EAAAA,EAAAA,IAAiBf,GAF5C,cAEUgB,EAFV,gBAGUP,EAASO,EAASC,SAH5B,uDAKIC,QAAQC,IAAR,MALJ,0DAJc,sBACTnB,GAAuB,KAAfA,EAAMoB,QADL,mCAYdC,KACC,CAACrB,KAEF,iCACE,SAACH,EAAD,CAAYC,SApBG,SAAAO,GACjBO,EAA0B,KAAVP,EAAe,CAAEL,MAAOK,GAAU,OAoB9B,IAAjBV,EAAM2B,QAA0B,OAAVtB,GACrB,qFAEA,SAACN,EAAA,EAAD,CAASC,MAAOA,S,mLClClB4B,EAAM,mCACNC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+FACOC,EADP,UACgBF,EADhB,uCACuDD,EADvD,wBACkF,GADlF,SAEwBF,MAAMK,GAF9B,cAEOV,EAFP,OAGOW,EAAOX,EAASY,OAHvB,kBAIQD,GAJR,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kFACQJ,EADR,UACiBF,EADjB,kBACmCM,EADnC,oBACsDP,EADtD,4BAEyBF,MAAMK,GAF/B,cAEQV,EAFR,gBAGqBA,EAASY,OAH9B,cAGQD,EAHR,yBAISA,GAJT,kEAOE,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCgB,GAAhC,kFACCL,EADD,UACUF,EADV,iCAC2CD,EAD3C,iCACuEQ,EADvE,SAC2F,EAD3F,iCAEkBV,MAAMK,GAFxB,cAECV,EAFD,OAGCW,EAAOX,EAASY,OAHjB,kBAIED,GAJF,kEAME,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBF,GAAzB,kFACCJ,EADD,UACUF,EADV,kBAC4BM,EAD5B,4BACuDP,EADvD,4BAEkBF,MAAMK,GAFxB,cAECV,EAFD,OAGCW,EAAOX,EAASY,OAHjB,kBAIED,GAJF,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,kFACCJ,EADD,UACUF,EADV,kBAC4BM,EAD5B,4BACuDP,EADvD,4BAEkBF,MAAMK,GAFxB,cAECV,EAFD,OAGCW,EAAOX,EAASY,OAHjB,kBAIED,GAJF","sources":["components/GalleryItem/Galleryitem.styled.jsx","components/GalleryItem/GalleryItem.jsx","components/Gallery/Gallery.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","service/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\n// import { NavLink } from \"react-router-dom\";\n\nexport const Item= styled.li`\n    background-color: #f1f1f1;\n`\n","import PropTypes from 'prop-types'\nimport { Item } from './Galleryitem.styled';\nimport { NavLink, useLocation } from 'react-router-dom';\nexport default function GalleryItem({ id, title }) {\n    const location = useLocation()\n  return (\n    <Item>\n      <NavLink to={`/movies/${id}`} state={{from:location}}>\n        <p>{title}</p>\n      </NavLink>\n    </Item>\n  );\n}\n\nGalleryItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n}","import PropTypes from 'prop-types'\nimport GalleryItem from \"../GalleryItem/GalleryItem\";\n\nexport default function Gallery({ items }) {\n    return <ul>\n        {items.map(({ id, title }) => <GalleryItem key={id}\n            title={title}\n            id={ id} />)}\n</ul>\n}\n\nGallery.propTypes = {\n   items: PropTypes.arrayOf(PropTypes.object),\n}","import PropTypes from 'prop-types'\nimport { useState } from \"react\";\n\nexport default function SearchForm({onSubmit}) {\n    const [query, setQuery] = useState('')\n      const handelChange = (e) => {\n        setQuery(e.target.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        onSubmit(query)\n        setQuery('')\n    }\n  \n    return <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handelChange} />\n        <button type=\"submit\">submit</button>\n    </form>\n}\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { useState, useEffect } from 'react';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport Gallery from 'components/Gallery/Gallery';\nimport { fetchSearchMovie } from '../service/fetchApi';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryParam = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (!query ||query.trim()==='') {\n      return;\n    }\n    async function fetch() {\n      try {\n        const response = await fetchSearchMovie(query);\n        await setItems(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetch();\n  }, [query]);\n  return (\n    <>\n      <SearchForm onSubmit={queryParam} />\n      {items.length === 0 && query !== null ? (\n        <p>Your query did not return any results, please try again!</p>\n      ) : (\n        <Gallery items={items} />\n      )}\n    </>\n  );\n}\n","const KEY = 'b6201d5209ec246f483ea16253167a90';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTranding() {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n        const response = await fetch(url);\n        const data = response.json();\n        return data;\n}\nexport async function fetchMovieById(movieId) {\n         const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n         const response = await fetch(url);\n         const data = await response.json();\n         return data;\n}\n\n  export async function fetchSearchMovie(searchQuery) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${1}&include_adult=false`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n}\n    export async function fetchCast(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n}\n    export async function fetchReviews(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n    }\n"],"names":["Item","styled","GalleryItem","id","title","location","useLocation","to","state","from","Gallery","items","map","SearchForm","onSubmit","useState","query","setQuery","e","preventDefault","type","value","onChange","target","Movies","setItems","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","response","results","console","log","trim","fetch","length","KEY","BASE_URL","fetchTranding","url","data","json","fetchMovieById","movieId","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}