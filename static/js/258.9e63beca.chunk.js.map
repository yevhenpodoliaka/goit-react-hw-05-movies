{"version":3,"file":"static/js/258.9e63beca.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails.jsx","service/fetchApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\n\nexport const Card = styled.div`\n    display:flex;\n    width:100%;\n\n`\nexport const WrapImg= styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    padding:25px;\n \n    width:25%;\n\n`\nexport const Poster= styled.img`\n    width: 100%;\n    height:auto;\n    display:block;\n    object-fit:cover;\n\n`\nexport const WrapDescription = styled.div`\nwidth:75%;\n text-align:start;\n  padding: 0 50px;\n  background-color:grey;\n  color:white;\n\n`\nexport const Title =styled.h2`\n    margin-bottom:20px;\n`\nexport const SubTitle =styled.h3`\n    margin-bottom:5px;\n`\nexport const Text=styled.p`\n    margin-bottom:10px;\n`","import PropTypes from 'prop-types';\nimport {\n  Card,\n  WrapImg,\n  Poster,\n  WrapDescription,\n  Title,\n  SubTitle,\n  Text,\n} from './MovieCard.styled';\nimport defaultPoster from '../../img/no-poster.jpg';\n\nexport default function MovieCard({\n  poster_path,\n  title,\n  overview,\n  genres = [],\n}) {\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : `${defaultPoster}`;\n  const genersList = genres.map(element => element.name).join(', ');\n  return (\n    <Card>\n      <WrapImg>\n        <Poster src={imageUrl} alt={title} />\n      </WrapImg>\n      <WrapDescription>\n        <Title>{title}</Title>\n        <SubTitle> About </SubTitle>\n        <Text>{overview}</Text>\n        <SubTitle> Genres </SubTitle>\n        <Text>{genersList}</Text>\n      </WrapDescription>\n    </Card>\n  );\n}\n\nMovieCard.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.object),\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport styled from 'styled-components';\n\nexport default function GoBackLink() {\n  let location = useLocation();\n  const page = useRef(location.state?.from);\n  const backPage = page.current || '/';\n  const backLinkHref = location.state ? location.state?.from : backPage;\n  return (\n    <>\n      <LinkBack to={backLinkHref}>GO BACK LINK</LinkBack>\n    </>\n  );\n}\n\n\nconst LinkBack = styled(Link)`\n  position: absolute;\n  color: blue;\n  text-decoration: none;\n  &:hover {\n    transform: scale(1.3);\n    font-weight: bold;\n  }\n`;\n","import styled from 'styled-components';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet, NavLink } from 'react-router-dom';\nimport { fetchMovieById } from 'service/fetchApi';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport GoBackLink from 'components/GoBackLink/GoBackLink';\n\nexport default function MovieDetalis() {\n  const [data, setData] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const response = await fetchMovieById(movieId);\n        await setData(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetch();\n  }, [movieId]);\n\n  const location = useLocation();\n  if (!data) {\n    return null;\n  }\n  const { poster_path, title, overview, genres } = data;\n\n  return (\n    <>\n      <GoBackLink />\n      <MovieCard\n        poster_path={poster_path}\n        title={title}\n        overview={overview}\n        genres={genres}\n      />\n      <Wrap>\n        <h3>Additional Information</h3>\n        <NavLinkStyled to=\"cast\" state={{ from: location }}>\n          cast\n        </NavLinkStyled>\n        <NavLinkStyled to=\"reviews\" state={{ from: location }}>\n          reviews\n        </NavLinkStyled>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Wrap>\n    </>\n  );\n}\n\nconst Wrap = styled.div`\n  background-color: #f1f1f1;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  display: flex;\n  flex-direction: column;\n`;\nconst NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  margin-bottom: 10px;\n  &.active {\n    color: blue;\n    font-weight: bold;\n  }\n`;\n","const KEY = 'b6201d5209ec246f483ea16253167a90';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTranding() {\n        const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&language=en-US&page=${1}`;\n        const response = await fetch(url);\n        const data = response.json();\n        return data;\n}\nexport async function fetchMovieById(movieId) {\n         const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`;\n         const response = await fetch(url);\n         const data = await response.json();\n         return data;\n}\n\n  export async function fetchSearchMovie(searchQuery) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${searchQuery}&page=${1}&include_adult=false`;\n    const response = await fetch(url);\n    const data = response.json();\n    return data;\n}\n    export async function fetchCast(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n}\n    export async function fetchReviews(movieId) {\n      const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`;\n      const response = await fetch(url);\n      const data = response.json();\n      return data;\n    }\n"],"names":["Card","styled","WrapImg","Poster","WrapDescription","Title","SubTitle","Text","MovieCard","poster_path","title","overview","genres","imageUrl","defaultPoster","genersList","map","element","name","join","src","alt","GoBackLink","location","useLocation","backPage","useRef","state","from","current","backLinkHref","LinkBack","to","Link","MovieDetalis","useState","data","setData","movieId","useParams","useEffect","fetchMovieById","response","console","log","fetch","Wrap","NavLinkStyled","Suspense","fallback","NavLink","KEY","BASE_URL","fetchTranding","url","json","fetchSearchMovie","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}